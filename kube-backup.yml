apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-backup
  labels:
    name: kube-backup
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kube-backup
  labels:
    name: kube-backup
rules:
  - apiGroups:
      - "*"
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - extensions
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kube-backup
  labels:
    name: kube-backup
roleRef:
  kind: ClusterRole
  name: kube-backup
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: kube-backup
    namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kube-backup
  labels:
    name: kube-backup
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: kube-backup
    spec:
      containers:
      - name: kube-backup
        envFrom:
        - secretRef:
            name: kube-backup
        image: 'deitch/kube-backup'
        imagePullPolicy: Always
        securityContext:
          privileged: true
      restartPolicy: Always
      serviceAccountName: kube-backup
      tolerations:
        - effect: NoSchedule
          operator: Exists
